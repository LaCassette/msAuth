generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  email      String     @db.VarChar(255)
  address    String?    @db.VarChar(255)
  phone      String?    @db.VarChar(20)
  created_at DateTime?  @default(now()) @db.Timestamp(0)
  Employee   Employee[]
  Review     Review[]
  User       User[]
}

model Contribution {
  id                Int       @id @default(autoincrement())
  employee_id       Int?
  review_id         Int?
  contribution_type String    @db.VarChar(255)
  contribution_date DateTime? @default(now()) @db.Timestamp(0)
  Employee          Employee? @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Contribution_ibfk_1")
  Review            Review?   @relation(fields: [review_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Contribution_ibfk_2")

  @@index([employee_id], map: "employee_id")
  @@index([review_id], map: "review_id")
}

model Employee {
  id           Int            @id @default(autoincrement())
  company_id   Int?
  first_name   String         @db.VarChar(255)
  last_name    String         @db.VarChar(255)
  email        String         @db.VarChar(255)
  phone        String?        @db.VarChar(20)
  position     String?        @db.VarChar(255)
  hire_date    DateTime?      @db.Date
  created_at   DateTime?      @default(now()) @db.Timestamp(0)
  Contribution Contribution[]
  Company      Company?       @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Employee_ibfk_1")
  QR_Code      QR_Code[]
  Review       Review[]
  Reward       Reward[]

  @@index([company_id], map: "company_id")
}

model Platform {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  url         String?   @db.VarChar(255)
  description String?   @db.Text
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  Review      Review[]
}

model QR_Code {
  id          Int       @id @default(autoincrement())
  employee_id Int?
  url         String    @db.VarChar(255)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  Employee    Employee? @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "QR_Code_ibfk_1")

  @@index([employee_id], map: "employee_id")
}

model Review {
  id           Int            @id @default(autoincrement())
  platform_id  Int?
  company_id   Int?
  employee_id  Int?
  author_name  String         @db.VarChar(255)
  author_email String?        @db.VarChar(255)
  rating       Int?
  comment      String?        @db.Text
  review_date  DateTime       @db.Timestamp(0)
  created_at   DateTime?      @default(now()) @db.Timestamp(0)
  Contribution Contribution[]
  Platform     Platform?      @relation(fields: [platform_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Review_ibfk_1")
  Company      Company?       @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Review_ibfk_2")
  Employee     Employee?      @relation(fields: [employee_id], references: [id], onUpdate: Restrict, map: "Review_ibfk_3")

  @@index([company_id], map: "company_id")
  @@index([employee_id], map: "employee_id")
  @@index([platform_id], map: "platform_id")
}

model Reward {
  id          Int       @id @default(autoincrement())
  employee_id Int?
  type        String    @db.VarChar(255)
  description String?   @db.Text
  obtained_at DateTime? @default(now()) @db.Timestamp(0)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  Employee    Employee? @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Reward_ibfk_1")

  @@index([employee_id], map: "employee_id")
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique(map: "username") @db.VarChar(255)
  email         String    @unique(map: "email") @db.VarChar(255)
  password_hash String    @db.VarChar(255)
  company_id    Int
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  Company       Company   @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "User_ibfk_1")

  @@index([company_id], map: "company_id")
}
